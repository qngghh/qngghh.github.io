{
    "version": "https://jsonfeed.org/version/1",
    "title": "Supernova • All posts by \"dl\" tag",
    "description": "小派过气画家",
    "home_page_url": "https://www.kitx86.com",
    "items": [
        {
            "id": "https://www.kitx86.com/2022/04/15/ml-dl-kfold-yan-zheng/",
            "url": "https://www.kitx86.com/2022/04/15/ml-dl-kfold-yan-zheng/",
            "title": "ML-DL-kFold验证",
            "date_published": "2022-04-14T19:17:12.000Z",
            "content_html": "<h3 id=\"训练方法\"><a href=\"#训练方法\" class=\"headerlink\" title=\"训练方法\"></a>训练方法</h3><p>K-fold验证是在训练模型的时候普遍使用的策略，在训练集上随机划分数个模块，一般分为5折，其中一折是验证集，另外四折是训练集，循环迭代5次，最后对做模型集成加权平均，特征工程里对于划分也有很细致的划分，但这里就不详细述说了，有基础的读者应该知道。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">create_folds</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> num_splits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># we create a new column called kfold and fill it with -1</span>\n    data<span class=\"token punctuation\">[</span><span class=\"token string\">\"fold\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    \n    <span class=\"token comment\"># the next step is to randomize the rows of the data</span>\n    <span class=\"token comment\"># data = data.sample(frac=1).reset_index(drop=True)</span>\n\n    <span class=\"token comment\"># calculate number of bins by Sturge's rule</span>\n    <span class=\"token comment\"># I take the floor of the value, you can also</span>\n    <span class=\"token comment\"># just round it</span>\n    <span class=\"token comment\"># num_bins = int(np.floor(1 + np.log2(len(data))))</span>\n    \n    <span class=\"token comment\"># bin targets</span>\n    data<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bins\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>\n        data<span class=\"token punctuation\">[</span><span class=\"token string\">\"score\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> bins<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> labels<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>\n    <span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># initiate the kfold class from model_selection module</span>\n    kf <span class=\"token operator\">=</span> StratifiedKFold<span class=\"token punctuation\">(</span>n_splits<span class=\"token operator\">=</span>num_splits<span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> random_state<span class=\"token operator\">=</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># fill the new kfold column</span>\n    <span class=\"token comment\"># note that, instead of targets, we use bins!</span>\n    <span class=\"token keyword\">for</span> f<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>t_<span class=\"token punctuation\">,</span> v_<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>kf<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>X<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span>data<span class=\"token punctuation\">.</span>bins<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        data<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>v_<span class=\"token punctuation\">,</span> <span class=\"token string\">'fold'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> f\n    \n    <span class=\"token comment\"># drop the bins column</span>\n    data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">\"bins\"</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># return dataframe with folds</span>\n    <span class=\"token keyword\">return</span> data<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n",
            "tags": [
                "ML",
                "DL"
            ]
        }
    ]
}